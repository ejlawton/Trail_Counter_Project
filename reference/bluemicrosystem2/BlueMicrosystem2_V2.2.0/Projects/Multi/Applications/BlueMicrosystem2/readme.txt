/**
******************************************************************************
* File    readme.txt  
* @version V2.2.0
* @date    23-December-2016
******************************************************************************
* Attention
*
* COPYRIGHT(c) 2016 STMicroelectronics
*
* Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
* You may not use this file except in compliance with the License.
* You may obtain a copy of the License at:
*
*        http://www.st.com/software_license_agreement_liberty_v2
*
* Redistribution and use in source and binary forms, with or without modification,
* are permitted provided that the following conditions are met:
*   1. Redistributions of source code must retain the above copyright notice,
*      this list of conditions and the following disclaimer.
*   2. Redistributions in binary form must reproduce the above copyright notice,
*      this list of conditions and the following disclaimer in the documentation
*      and/or other materials provided with the distribution.
*   3. Neither the name of STMicroelectronics nor the names of its contributors
*      may be used to endorse or promote products derived from this software
*      without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
******************************************************************************
*/

Application Description 

 This firmware package includes Components Device Drivers, Board Support Package
 and example application for the following STMicroelectronics elements:
 - X-NUCLEO-IDB04A1/X-NUCLEO-IDB05A1 Bluetooth Low energy expansion boards
 - X-NUCLEO-IKS01A1 Expansion board for four MEMS sensor devices:
       HTS221, LPS25H, LSM6DS0, LSM6DS3, LIS3MDL
 - X-NUCLEO-IKS01A2 Expansion board for four MEMS sensor devices:
       HTS221, LPS22HB, LSM6DSL, LSM303AGR
 - X-NUCLEO-CCAM02M1 Digital MEMS microphones expansion board
 - NUCLEO-F401RE NUCLEO-L476RG Nucleo boards
 - STEVAL-STLKT01V1 (SensorTile) evaluation board that contains the following components:
	. MEMS sensor devices: HTS221, LPS22HB, LSM303, LSM6DSM
	. digital microphone: MP34DT04
	. Gas Gauge IC with alarm output: STC3115
	
 - The osxMotionFX (iNEMOEngine PRO) suite uses advanced algorithms to integrate outputs
   from multiple MEMS sensors in a smartway, independent of environmental conditions,
   to reach optimal performance. Real-time motion-sensor data fusion is set to significantly
   improve the user experience, increasing accuracy, resolution, stability and response time.
 - osxMotionAR (iNEMOEngine PRO) software provides real-time activity recognition data 
   using MEMS accelerometer sensor
 - osxMotionCP (iNEMOEngine PRO) software provides carry Position recognition data 
   using MEMS accelerometer sensor
 - osxMotionGR (iNEMOEngine PRO) software provides carry Gesture recognition data 
   using MEMS accelerometer sensor
 - osxAcousticSL software (for only F4 STM32 Nucleo motherboard) provides real-time audio
   source localization using PCM signal audio
 - osxBlueVoice software enables real-time voice communication over Bluetooth Low Energy. It includes one
   characteristic for audio transmission and one for synchronization and it is responsible for audio
   encoding and periodical data transmission on Server side and for decoding of received voice data on Client side.
 - USB device library (for only STEVAL-STLCS01V1) provides support of multi packet transfer to allow
   sending big amount of data without split them into max packet size transfers.

 The Example application initizializes all the Components and Library creating 3 Custom Bluetooth services:
 - The first service exposes all the HW and SW characteristics:
   . HW characteristics:
		. related to MEMS sensor devices: Temperature, Humidity, Pressure, Magnetometer, Gyroscope and Accelleromenter
		  and Microphones Signal Noise dB level.
		. battery Gas Gauge (for only SensorTile) 
   . SW characteristics: the quaternions generated by the osXMotionFX library in short precision, the activity
     recognized using the osxMotionAR algorithm, the carry position recognized using the osxMotionCP algorithm,
     the Gesture recognized using the osxMotionGR, the audio source localization (for only F4 STM32 Nucleo motherboard)
     using the osxAcousticSL algorithm and Voice over Bluetooth Low Enegy using the osxBlueVoice algorithm
 - The second Service exposes the console services where we have stdin/stdout and stderr capabilities
 - The last Service is used for configuration purpose
 
 For NUCLEO boards the example application allows the user to control the initialization phase via UART.
 Launch a terminal application and set the UART port to 460800 bps, 8 bit, No Parity, 1 stop bit.
 For having the same UART functionality on SensorTile board, is necessary to recompile the code uncomment the line 87 
	//#define OSX_BMS_ENABLE_PRINTF
 on file:
	Projects\Multi\Applications\BlueMicrosystem2\Inc\osx_bms_config.h file
 This enables the UART that starts with a delay of 10 Seconds for allowing the time to open the UART for looking the initialization phase.

 This example must be used with the related BlueMS Android/iOS application available on Play/itune store,
 in order to read the sent information by Bluetooth Low Energy protocol

                   ---------------------------------------------
                   | Important Hardware Additional Information |
			       ---------------------------------------------
1) Before to connect X-NUCLEO-IKS01A1 with X-NUCLEO-IDB04A1 (or X-NUCLEO-IDB05A1) expansion board through the Arduino UNO R3 extension connector,
   remove the 0-ohm resistors SB25, SB26 and SB27 onto X-NUCLEO-IKS01A1 board.
2) Before to connect X-NUCLEO-IKS01A2 with X-NUCLEO-CCAM02M1 expansion board through the Arduino UNO R3 extension connector,
   on to X-NUCLEO-IKS01A2 board remove these 0-ohm resistor:
   - for F4 STM32 Nucleo motherboard remove SB25, SB26 and SB27
   - for L4 STM32 Nucleo motherboard remove SB25 if additional microphones are plugged on to X-NUCLEO-CCA02M1 board.
3) For only L4 STM32 Nucleo motherboard, before to connect the board X-NUCLEO-CCA02M1 with the STM32 L4 Nucleo motherboard through the Morpho connector layout, on to X-NUCLEO-CCA02M1 board:
   - close the solder bridges SB12, SB16 and open the solder bridges SB7, SB15 and SB17
   - if additional microphones are plugged, close the solder bridge SB17.
  
                              -----------------------
                              | VERY IMPORTANT (1): |
                              -----------------------
 1) This example support the Firmware-Over-The-Air (FOTA) update (for only X-NUCLEO-IDB05A1 Bluetooth
 Low energy expansion boards) and the osxMotion License activation OTA using the BlueMS Android/iOS
 application (Version 3.0.0 or higher)
 2) This example must run starting at address 0x08004000 in memory and works ONLY if the BootLoader 
 is saved at the beginning of the FLASH (address 0x08000000)
 3) Before Flash a different package that uses the Licenses Manager it's necessary to cleanup the Licenses saved 
 on FLASH because they could be not compatible.
 
 For each IDE (IAR/µVision/System Workbench), and for each platform (NUCLEO-F401RE/NUCLEO-L476RG/SensorTile),
 there are some scripts *.bat/*.sh that makes the following operations:
 - Full Flash Erase
 - Load the BootLoader on the rigth flash region
 - Load the Program (after the compilation) on the rigth flash region (This could be used for a FOTA)
 - Dump back one single binary that contain BootLoader+Program that could be 
   flashed at the flash beginning (address 0x08000000) (This COULD BE NOT used for FOTA)
 - Reset the board
 
                               -----------------------
                               | VERY IMPORTANT (2): |
                               -----------------------
It's necessary to choose the right Target configuration during the compilation.
If the code is compiled for IKS01A1 could not run if it's attached the X-NUCLEO-IKS01A2 and vice versa.

                                --------------------
                                | KNOWN LIMITATION |
                                --------------------
 - Even if BLUEMICROSYSTEM2 send 100quaternions/second with Bluetooth, the mobile devices could render only 60frames/second
 - FOTA does not work when using X-NUCLEO-IDB04A1
 - For NUCLEO-F401RE board, there is an hardware conflict between the boards X-NUCLEO-IKS01A2 and the X-NUCLEO-CCA02M1.
   The hardware features of the LSM6DSL are disabled.
 
 Inside the Binary Directory there are the following binaries:
Binary/
+-- STM32F401RE-Nucleo
+-- STM32F401RE-Nucleo
¦   +-- BlueMS2_IKS01A1_NucleoF4.bin    (Program without BootLoader. COULD BE USED     for FOTA)
¦   +-- BlueMS2_IKS01A1_NucleoF4.hex    (Program without BootLoader. COULD BE USED     for FOTA)
¦   +-- BlueMS2_IKS01A2_NucleoF4.bin    (Program without BootLoader. COULD BE USED     for FOTA)
¦   +-- BlueMS2_IKS01A2_NucleoF4.hex    (Program without BootLoader. COULD BE USED     for FOTA)
¦   +-- BlueMS2_IKS01A1_NucleoF4_BL.bin (Program with BootLoader.    COULD NOT BE USED for FOTA)
¦   +-- BlueMS2_IKS01A1_NucleoF4_BL.hex (Program with BootLoader.    COULD NOT BE USED for FOTA)
¦   +-- BlueMS2_IKS01A2_NucleoF4_BL.bin (Program with BootLoader.    COULD NOT BE USED for FOTA)
¦   +-- BlueMS2_IKS01A2_NucleoF4_BL.hex (Program with BootLoader.    COULD NOT BE USED for FOTA)
+-- STM32L476RG-Nucleo
¦   +-- BlueMS2_IKS01A1_NucleoL4.bin    (Program without BootLoader. COULD BE USED     for FOTA)
¦   +-- BlueMS2_IKS01A1_NucleoL4.hex    (Program without BootLoader. COULD BE USED     for FOTA)
¦   +-- BlueMS2_IKS01A2_NucleoL4.bin    (Program without BootLoader. COULD BE USED     for FOTA)
¦   +-- BlueMS2_IKS01A2_NucleoL4.hex    (Program without BootLoader. COULD BE USED     for FOTA)
¦   +-- BlueMS2_IKS01A1_NucleoL4_BL.bin (Program with BootLoader.    COULD NOT BE USED for FOTA)
¦   +-- BlueMS2_IKS01A1_NucleoL4_BL.hex (Program with BootLoader.    COULD NOT BE USED for FOTA)
¦   +-- BlueMS2_IKS01A2_NucleoL4_BL.bin (Program with BootLoader.    COULD NOT BE USED for FOTA)
¦   +-- BlueMS2_IKS01A2_NucleoL4_BL.hex (Program with BootLoader.    COULD NOT BE USED for FOTA))
+-- STM32L476RG-SensorTile
    +-- BlueMS2_ST.bin     (Program without BootLoader. COULD BE USED     for FOTA)
	+-- BlueMS2_ST.hex     (Program without BootLoader. COULD BE USED     for FOTA)
    +-- BlueMS2_ST_BL.bin  (Program with BootLoader.    COULD NOT BE USED for FOTA)
    +-- BlueMS2_ST_BL.hex  (Program with BootLoader.    COULD NOT BE USED for FOTA)

 The Magneto Calibration provided by osxMotionFX (INEMOEngine PRO) could be saved in FLASH.
 In this way it's not necessary to make again the calibration at every STM32 Nucleo board reset.

 For avoiding accidental erasure of the calibration data, for forcing a new calibration it is necessary to press 
 the blue user button on the STM32 Nucleo board 3 times in less than 2 seconds.

 The osxMotionFX library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
 (the "OSX-M1 License"). You may obtain a copy of the OSX License at: 
 Middlewares\ST\STM32_OSX_MotionFX_Library\OpenSoftwareX_LLA_evaluation_10Nov2014.pdf
 
 The osxMotionAR library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
 (the "OSX-M1 License"). You may obtain a copy of the OSX License at: 
 Middlewares\ST\STM32_OSX_MotionAR_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf

 The osxMotionCP library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
 (the "OSX-M1 License"). You may obtain a copy of the OSX License at: 
 Middlewares\ST\STM32_OSX_MotionCP_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf

 The osxMotionGR library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
 (the "OSX-M1 License"). You may obtain a copy of the OSX License at: 
 Middlewares\ST\STM32_OSX_MotionGR_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf

 The osxAcousticSL library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
 (the "OSX-M1 License"). You may obtain a copy of the OSX License at: 
 Middlewares\ST\STM32_OSX_AcousticSL_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf

 The osxBlueVoice library is licensed under ST OpenSoftwareX M1 Limited License Agreement, 
 (the "OSX-M1 License"). You may obtain a copy of the OSX License at: 
 Middlewares\ST\STM32_OSX_BlueVoice_Library\OpenSoftwareX_LLA_evaluation_5Nov2014.pdf
 
 The USB device library is licensed under MCD-ST Liberty SW License Agreement V2,
 (the "License"). You may obtain a copy of the License at:
 http://www.st.com/software_license_agreement_liberty_v2.


@par Hardware and Software environment

  - This example runs on Sensor expansion board attached to STM32F401RE/STM32L476RG devices
    can be easily tailored to any other supported device and development board.
    Or it runs on STEVAL-STLKT01V1 (SensorTile) evaluation board
    
  - This example must be used with the related BlueMS Android/iOS application available on Play/itune store,
    in order to read the sent information by Bluetooth Low Energy protocol
    
@par STM32Cube packages:
  - STM32F4xx drivers from STM32CubeF4 V1.13.0
  - STM32L4xx drivers from STM32CubeL4 V1.5.1
@par X-CUBE packages:
  - X-CUBE-BLE1 V2.7.0
  - X-CUBE-MEMS1 V3.0.0
  - X-CUBE-MEMSMIC1 V1.3.1 [Modified for added Audio DeInit]
@par STEVAL-STLCS01V1:
  - STEVAL-STLCS01V1 V1.2.0 [Modified for added Audio DeInit]

@par How to use it ? 

This package contains projects for 3 IDEs viz. IAR, µVision and System Workbench. 
In order to make the  program work, you must do the following:
 - WARNING: before opening the project with any toolchain be sure your folder
   installation path is not too in-depth since the toolchain may report errors
   after building.
- WARNING: Sensor Fusion library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxMotionFX Release Notes in order to know how to get a valid license
- WARNING: Activity Recognition library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxMotionAR Release Notes in order to know how to get a valid license
- WARNING: Carry position Recognition library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxMotionCP Release Notes in order to know how to get a valid license
- WARNING: Gesture Recognition library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxMotionGR Release Notes in order to know how to get a valid license
- WARNING: Acoustic Source Localization library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxAcousticSL Release Notes in order to know how to get a valid license
- WARNING: Voice over Bluetooth Low Enegy Library requires a valid license in order to be used;
   without this license, you cannot compile the sample application; please read
   osxBlueVoice Release Notes in order to know how to get a valid license

For IAR:
 - Open IAR toolchain (this firmware has been successfully tested with Embedded Workbench V7.70.2).
 - Open the IAR project file EWARM\STM32F401RE-Nucleo\ALLMEMS1_NF4.eww or EWARM\STM32F401RE-Nucleo\ALLMEMS1_NL4.eww or EWARM\STM32L476RG-SensorTile\ALLMEMS1_ST.eww
 - Rebuild all files and run these script that you find on the same directory:
		- For Nucleo F4: CleanBlueMS2_IAR_IKS01A1_F4.bat or CleanBlueMS2_IAR_IKS01A2_F4.bat
		- For Nucleo L4: CleanBlueMS2_IAR_IKS01A1_L4.bat or CleanBlueMS2_IAR_IKS01A2_L4.bat
		- For STEVAL-STLKT01V1: CleanBlueMS2_IAR_ST.bat

For µVision:
 - Open µVision toolchain (this firmware has been successfully tested with MDK-ARM Professional Version: 5.21.1).
 - Open the µVision project file MDK-ARM\STM32F401RE-Nucleo\Project.uvprojx or MDK-ARM\STM32L476RG-Nucleo\Project.uvprojx or MDK-ARM\STM32L476RG-SensorTile\Project.uvprojx
 - Rebuild all files and run these script that you find on the same directory.
		- For Nucleo F4: CleanBlueMS2_MDK_ARM_IKS01A1_F4.bat or CleanBlueMS2_MDK_ARM_IKS01A2_F4.bat
		- For Nucleo L4: CleanBlueMS2_MDK_ARM_IKS01A1_L4.bat or CleanBlueMS2_MDK_ARM_IKS01A2_L4.bat
		- For STEVAL-STLKT01V1: CleanBlueMS2_MDK_ARM_ST.bat
		
For System Workbench:
 - Open System Workbench for STM32 (this firmware has been successfully tested with System Workbench for STM32 Version 1.11.0.201610101338).
 - Set the default workspace proposed by the IDE (please be sure that there are not spaces in the workspace path).
 - Press "File" -> "Import" -> "Existing Projects into Workspace"; press "Browse" in the "Select root directory" and choose the path where the System
   Workbench project is located (it should be SW4STM32\STM32F401RE-Nucleo\ or SW4STM32\STM32L476RG-Nucleo\ or SW4STM32\STM32L476RG-SensorTile). 
 - Rebuild all files and and run these script that you find on the same directory:
   - if you are on windows and you had installed the STM32 ST-Link utility:
		- For Nucleo F4: CleanBlueMS2_SW4STM32_IKS01A1_F4.bat or CleanBlueMS2_SW4STM32_IKS01A2_F4.bat
		- For Nucleo L4: CleanBlueMS2_SW4STM32_IKS01A1_L4.bat or CleanBlueMS2_SW4STM32_IKS01A2_L4.bat
		- For STEVAL-STLKT01V1: CleanBlueMS2_SW4STM32_ST.bat	
   - Otherwise (Linux/iOS or Windows without the STM32 ST-Link Utility):
		- For Nucleo F4: CleanBlueMS2_SW4STM32_IKS01A1_F4.sh or CleanBlueMS2_SW4STM32_IKS01A2_F4.sh
		- For Nucleo L4: CleanBlueMS2_SW4STM32_IKS01A1_L4.sh or CleanBlueMS2_SW4STM32_IKS01A2_L4.sh
		- For STEVAL-STLKT01V1: CleanBlueMS2_SW4STM32_ST.sh
 /******************* (C) COPYRIGHT 2016 STMicroelectronics *****END OF FILE****/